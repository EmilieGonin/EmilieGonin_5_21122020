var $jscomp={scope:{}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(c.get||c.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.SYMBOL_PREFIX="jscomp_symbol_";
$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};$jscomp.symbolCounter_=0;$jscomp.Symbol=function(a){return $jscomp.SYMBOL_PREFIX+(a||"")+$jscomp.symbolCounter_++};
$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.iterator;a||(a=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[a]&&$jscomp.defineProperty(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return $jscomp.arrayIterator(this)}});$jscomp.initSymbolIterator=function(){}};$jscomp.arrayIterator=function(a){var b=0;return $jscomp.iteratorPrototype(function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}})};
$jscomp.iteratorPrototype=function(a){$jscomp.initSymbolIterator();a={next:a};a[$jscomp.global.Symbol.iterator]=function(){return this};return a};$jscomp.makeIterator=function(a){$jscomp.initSymbolIterator();var b=a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};$jscomp.findInternal=function(a,b,c){a instanceof String&&(a=String(a));for(var d=a.length,e=0;e<d;e++){var f=a[e];if(b.call(c,f,e,a))return{i:e,v:f}}return{i:-1,v:void 0}};
$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}};$jscomp.polyfill("Array.prototype.findIndex",function(a){return a?a:function(a,c){return $jscomp.findInternal(this,a,c).i}},"es6-impl","es3");
var CART=JSON.parse(localStorage.getItem("cart")),CART_TOTAL_CONTAINER=document.getElementById("total"),CART_TOTAL=localStorage.getItem("cart_total"),PRODUCT_ADDED=document.getElementById("added");CART_TOTAL&&(CART_TOTAL_CONTAINER.textContent=CART_TOTAL+"\u20ac");
function addProduct(a){var b=JSON.parse(localStorage.getItem("cart"));if(b){if(b.some(function(b){return b._id==a._id})){var c=b.findIndex(function(b){return b._id==a._id});b[c].quantity++}else b.push(a);updateCart(b)}else updateCart([a]),console.log("Produit ajout\u00e9, le panier \u00e9tait vide.");showMessage()}function updateCart(a){localStorage.setItem("cart",JSON.stringify(a));calculateCart(a)}
function calculateCart(a){var b=0;a=$jscomp.makeIterator(a);for(var c=a.next();!c.done;c=a.next())c=c.value,b+=c.price*c.quantity;localStorage.setItem("cart_total",b/100);CART_TOTAL_CONTAINER.textContent=b/100+"\u20ac"}function showMessage(){PRODUCT_ADDED.classList.remove("hidden");setTimeout(function(){PRODUCT_ADDED.classList.add("hidden")},3E3)}function clearCart(){localStorage.clear();CART_CONTAINER.textContent="Le panier est vide."};
